/**********************************************************************
 * Extern for Select
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Select = {
    "displayName": {},
    "propTypes": {
        "addLabelText": {
            "isRequired": function () {}
        },
        "aria-label": {
            "isRequired": function () {}
        },
        "aria-labelledby": {
            "isRequired": function () {}
        },
        "arrowRenderer": {
            "isRequired": function () {}
        },
        "autoBlur": {
            "isRequired": function () {}
        },
        "autofocus": {
            "isRequired": function () {}
        },
        "autosize": {
            "isRequired": function () {}
        },
        "backspaceRemoves": {
            "isRequired": function () {}
        },
        "backspaceToRemoveMessage": {
            "isRequired": function () {}
        },
        "className": {
            "isRequired": function () {}
        },
        "clearAllText": {
            "isRequired": function () {}
        },
        "clearValueText": {
            "isRequired": function () {}
        },
        "clearable": {
            "isRequired": function () {}
        },
        "delimiter": {
            "isRequired": function () {}
        },
        "disabled": {
            "isRequired": function () {}
        },
        "escapeClearsValue": {
            "isRequired": function () {}
        },
        "filterOption": {
            "isRequired": function () {}
        },
        "filterOptions": {
            "isRequired": function () {}
        },
        "ignoreAccents": {
            "isRequired": function () {}
        },
        "ignoreCase": {
            "isRequired": function () {}
        },
        "inputProps": {
            "isRequired": function () {}
        },
        "inputRenderer": {
            "isRequired": function () {}
        },
        "instanceId": {
            "isRequired": function () {}
        },
        "isLoading": {
            "isRequired": function () {}
        },
        "joinValues": {
            "isRequired": function () {}
        },
        "labelKey": {
            "isRequired": function () {}
        },
        "matchPos": {
            "isRequired": function () {}
        },
        "matchProp": {
            "isRequired": function () {}
        },
        "menuBuffer": {
            "isRequired": function () {}
        },
        "menuContainerStyle": {
            "isRequired": function () {}
        },
        "menuRenderer": {
            "isRequired": function () {}
        },
        "menuStyle": {
            "isRequired": function () {}
        },
        "multi": {
            "isRequired": function () {}
        },
        "name": {
            "isRequired": function () {}
        },
        "noResultsText": {
            "isRequired": function () {}
        },
        "onBlur": {
            "isRequired": function () {}
        },
        "onBlurResetsInput": {
            "isRequired": function () {}
        },
        "onChange": {
            "isRequired": function () {}
        },
        "onClose": {
            "isRequired": function () {}
        },
        "onCloseResetsInput": {
            "isRequired": function () {}
        },
        "onFocus": {
            "isRequired": function () {}
        },
        "onInputChange": {
            "isRequired": function () {}
        },
        "onInputKeyDown": {
            "isRequired": function () {}
        },
        "onMenuScrollToBottom": {
            "isRequired": function () {}
        },
        "onOpen": {
            "isRequired": function () {}
        },
        "onValueClick": {
            "isRequired": function () {}
        },
        "openAfterFocus": {
            "isRequired": function () {}
        },
        "openOnFocus": {
            "isRequired": function () {}
        },
        "optionClassName": {
            "isRequired": function () {}
        },
        "optionComponent": {
            "isRequired": function () {}
        },
        "optionRenderer": {
            "isRequired": function () {}
        },
        "options": {
            "isRequired": function () {}
        },
        "pageSize": {
            "isRequired": function () {}
        },
        "placeholder": {
            "isRequired": function () {}
        },
        "required": {
            "isRequired": function () {}
        },
        "resetValue": {
            "isRequired": function () {}
        },
        "scrollMenuIntoView": {
            "isRequired": function () {}
        },
        "searchable": {
            "isRequired": function () {}
        },
        "simpleValue": {
            "isRequired": function () {}
        },
        "style": {
            "isRequired": function () {}
        },
        "tabIndex": {
            "isRequired": function () {}
        },
        "tabSelectsValue": {
            "isRequired": function () {}
        },
        "value": {
            "isRequired": function () {}
        },
        "valueComponent": {
            "isRequired": function () {}
        },
        "valueKey": {
            "isRequired": function () {}
        },
        "valueRenderer": {
            "isRequired": function () {}
        },
        "wrapperStyle": {
            "isRequired": function () {}
        }
    },
    "Async": {
        "propTypes": {
            "autoload": function () {},
            "cache": {
                "isRequired": function () {}
            },
            "children": function () {},
            "ignoreAccents": {
                "isRequired": function () {}
            },
            "ignoreCase": {
                "isRequired": function () {}
            },
            "loadingPlaceholder": function () {},
            "loadOptions": function () {},
            "options": function () {},
            "placeholder": {
                "isRequired": function () {}
            },
            "searchPromptText": {
                "isRequired": function () {}
            }
        },
        "defaultProps": {
            "autoload": {},
            "cache": {},
            "children": function () {},
            "ignoreAccents": {},
            "ignoreCase": {},
            "loadingPlaceholder": {},
            "options": {},
            "searchPromptText": {}
        }
    },
    "AsyncCreatable": {
        "displayName": {}
    },
    "Creatable": {
        "displayName": {},
        "propTypes": {
            "children": {
                "isRequired": function () {}
            },
            "filterOptions": {
                "isRequired": function () {}
            },
            "isOptionUnique": {
                "isRequired": function () {}
            },
            "isValidNewOption": {
                "isRequired": function () {}
            },
            "menuRenderer": {
                "isRequired": function () {}
            },
            "newOptionCreator": {
                "isRequired": function () {}
            },
            "options": {
                "isRequired": function () {}
            },
            "promptTextCreator": {
                "isRequired": function () {}
            },
            "shouldKeyDownEventCreateNewOption": {
                "isRequired": function () {}
            }
        },
        "isOptionUnique": function () {},
        "isValidNewOption": function () {},
        "newOptionCreator": function () {},
        "promptTextCreator": function () {},
        "shouldKeyDownEventCreateNewOption": function () {},
        "getDefaultProps": function () {},
        "defaultProps": {
            "filterOptions": function () {},
            "isOptionUnique": function () {},
            "isValidNewOption": function () {},
            "menuRenderer": function () {},
            "newOptionCreator": function () {},
            "promptTextCreator": function () {},
            "shouldKeyDownEventCreateNewOption": function () {}
        }
    },
    "getDefaultProps": function () {},
    "defaultProps": {
        "addLabelText": {},
        "arrowRenderer": function () {},
        "autosize": {},
        "backspaceRemoves": {},
        "backspaceToRemoveMessage": {},
        "clearable": {},
        "clearAllText": {},
        "clearValueText": {},
        "delimiter": {},
        "disabled": {},
        "escapeClearsValue": {},
        "filterOptions": function () {},
        "ignoreAccents": {},
        "ignoreCase": {},
        "inputProps": {},
        "isLoading": {},
        "joinValues": {},
        "labelKey": {},
        "matchPos": {},
        "matchProp": {},
        "menuBuffer": {},
        "menuRenderer": function () {},
        "multi": {},
        "noResultsText": {},
        "onBlurResetsInput": {},
        "onCloseResetsInput": {},
        "openAfterFocus": {},
        "optionComponent": {
            "displayName": {},
            "propTypes": {
                "children": {
                    "isRequired": function () {}
                },
                "className": {
                    "isRequired": function () {}
                },
                "instancePrefix": function () {},
                "isDisabled": {
                    "isRequired": function () {}
                },
                "isFocused": {
                    "isRequired": function () {}
                },
                "isSelected": {
                    "isRequired": function () {}
                },
                "onFocus": {
                    "isRequired": function () {}
                },
                "onSelect": {
                    "isRequired": function () {}
                },
                "onUnfocus": {
                    "isRequired": function () {}
                },
                "option": function () {},
                "optionIndex": {
                    "isRequired": function () {}
                }
            }
        },
        "pageSize": {},
        "placeholder": {},
        "required": {},
        "scrollMenuIntoView": {},
        "searchable": {},
        "simpleValue": {},
        "tabSelectsValue": {},
        "valueComponent": {
            "displayName": {},
            "propTypes": {
                "children": {
                    "isRequired": function () {}
                },
                "disabled": {
                    "isRequired": function () {}
                },
                "id": {
                    "isRequired": function () {}
                },
                "onClick": {
                    "isRequired": function () {}
                },
                "onRemove": {
                    "isRequired": function () {}
                },
                "value": function () {}
            }
        },
        "valueKey": {}
    }
};
Select.prototype = {
    "constructor": function () {},
    "__reactAutoBindPairs": function () {},
    "getInitialState": function () {},
    "componentWillMount": function () {},
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "componentWillUpdate": function () {},
    "componentDidUpdate": function () {},
    "componentWillUnmount": function () {},
    "toggleTouchOutsideEvent": function () {},
    "handleTouchOutside": function () {},
    "focus": function () {},
    "blurInput": function () {},
    "handleTouchMove": function () {},
    "handleTouchStart": function () {},
    "handleTouchEnd": function () {},
    "handleTouchEndClearValue": function () {},
    "handleMouseDown": function () {},
    "handleMouseDownOnArrow": function () {},
    "handleMouseDownOnMenu": function () {},
    "closeMenu": function () {},
    "handleInputFocus": function () {},
    "handleInputBlur": function () {},
    "handleInputChange": function () {},
    "handleKeyDown": function () {},
    "handleValueClick": function () {},
    "handleMenuScroll": function () {},
    "handleRequired": function () {},
    "getOptionLabel": function () {},
    "getValueArray": function () {},
    "expandValue": function () {},
    "setValue": function () {},
    "selectValue": function () {},
    "addValue": function () {},
    "popValue": function () {},
    "removeValue": function () {},
    "clearValue": function () {},
    "getResetValue": function () {},
    "focusOption": function () {},
    "focusNextOption": function () {},
    "focusPreviousOption": function () {},
    "focusPageUpOption": function () {},
    "focusPageDownOption": function () {},
    "focusStartOption": function () {},
    "focusEndOption": function () {},
    "focusAdjacentOption": function () {},
    "getFocusedOption": function () {},
    "getInputValue": function () {},
    "selectFocusedOption": function () {},
    "renderLoading": function () {},
    "renderValue": function () {},
    "renderInput": function () {},
    "renderClear": function () {},
    "renderArrow": function () {},
    "filterOptions": function () {},
    "onOptionRef": function () {},
    "renderMenu": function () {},
    "renderHiddenField": function () {},
    "getFocusableOptionIndex": function () {},
    "renderOuter": function () {},
    "render": function () {},
    "mixins": function () {},
    "statics": function () {},
    "propTypes": function () {},
    "contextTypes": function () {},
    "childContextTypes": function () {},
    "getDefaultProps": function () {},
    "getChildContext": function () {},
    "shouldComponentUpdate": function () {},
    "updateComponent": function () {},
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {},
    "replaceState": function () {},
    "isMounted": function () {}
};
Select.Async.prototype = {
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {}
};
Select.AsyncCreatable.prototype = {
    "constructor": function () {},
    "__reactAutoBindPairs": function () {},
    "render": function () {},
    "mixins": function () {},
    "statics": function () {},
    "propTypes": function () {},
    "contextTypes": function () {},
    "childContextTypes": function () {},
    "getDefaultProps": function () {},
    "getInitialState": function () {},
    "getChildContext": function () {},
    "componentWillMount": function () {},
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "shouldComponentUpdate": function () {},
    "componentWillUpdate": function () {},
    "componentDidUpdate": function () {},
    "componentWillUnmount": function () {},
    "updateComponent": function () {},
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {},
    "replaceState": function () {},
    "isMounted": function () {}
};
Select.Creatable.prototype = {
    "constructor": function () {},
    "__reactAutoBindPairs": function () {},
    "createNewOption": function () {},
    "filterOptions": function () {},
    "isOptionUnique": function () {},
    "menuRenderer": function () {},
    "onInputChange": function () {},
    "onInputKeyDown": function () {},
    "onOptionSelect": function () {},
    "render": function () {},
    "mixins": function () {},
    "statics": function () {},
    "propTypes": function () {},
    "contextTypes": function () {},
    "childContextTypes": function () {},
    "getDefaultProps": function () {},
    "getInitialState": function () {},
    "getChildContext": function () {},
    "componentWillMount": function () {},
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "shouldComponentUpdate": function () {},
    "componentWillUpdate": function () {},
    "componentDidUpdate": function () {},
    "componentWillUnmount": function () {},
    "updateComponent": function () {},
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {},
    "replaceState": function () {},
    "isMounted": function () {}
};
Select.defaultProps.optionComponent.prototype = {
    "constructor": function () {},
    "__reactAutoBindPairs": function () {},
    "blockEvent": function () {},
    "handleMouseDown": function () {},
    "handleMouseEnter": function () {},
    "handleMouseMove": function () {},
    "handleTouchEnd": function () {},
    "handleTouchMove": function () {},
    "handleTouchStart": function () {},
    "onFocus": function () {},
    "render": function () {},
    "mixins": function () {},
    "statics": function () {},
    "propTypes": function () {},
    "contextTypes": function () {},
    "childContextTypes": function () {},
    "getDefaultProps": function () {},
    "getInitialState": function () {},
    "getChildContext": function () {},
    "componentWillMount": function () {},
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "shouldComponentUpdate": function () {},
    "componentWillUpdate": function () {},
    "componentDidUpdate": function () {},
    "componentWillUnmount": function () {},
    "updateComponent": function () {},
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {},
    "replaceState": function () {},
    "isMounted": function () {}
};
Select.defaultProps.valueComponent.prototype = {
    "constructor": function () {},
    "__reactAutoBindPairs": function () {},
    "handleMouseDown": function () {},
    "onRemove": function () {},
    "handleTouchEndRemove": function () {},
    "handleTouchMove": function () {},
    "handleTouchStart": function () {},
    "renderRemoveIcon": function () {},
    "renderLabel": function () {},
    "render": function () {},
    "mixins": function () {},
    "statics": function () {},
    "propTypes": function () {},
    "contextTypes": function () {},
    "childContextTypes": function () {},
    "getDefaultProps": function () {},
    "getInitialState": function () {},
    "getChildContext": function () {},
    "componentWillMount": function () {},
    "componentDidMount": function () {},
    "componentWillReceiveProps": function () {},
    "shouldComponentUpdate": function () {},
    "componentWillUpdate": function () {},
    "componentDidUpdate": function () {},
    "componentWillUnmount": function () {},
    "updateComponent": function () {},
    "isReactComponent": function () {},
    "setState": function () {},
    "forceUpdate": function () {},
    "replaceState": function () {},
    "isMounted": function () {}
};
/**********************************************************************
 * End Generated Extern for Select
   /**********************************************************************/
